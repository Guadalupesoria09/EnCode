<%- include('includes/head.ejs') %>

<h1 class="title has-text-centered">Estadísticas Sucursal</h1>

<div class="columns is-centered">
    <div class="column is-half">
        <form id="formEstadisticas" action="/estadisticas/comprasSucursal" method="GET">
            <input type="hidden" name="_csrf" value="<%= csrfToken %>">

            <!-- Campo para seleccionar la sucursal -->
            <div class="field">
                <label class="label">Selecciona la Sucursal</label>
                <div class="control">
                    <input class="input" type="number" name="idSucursal" placeholder="ID de la Sucursal" required>
                </div>
            </div>

            <div class="control has-text-centered">
                <button type="submit" class="button is-link">Ver Graficas</button>
            </div>
        </form>
    </div>
</div>

<canvas id="graficoComprasUsuario" width="200" height="200"></canvas>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    $('#formEstadisticas').submit(function(event) {
        event.preventDefault(); // Evita que el formulario se envíe de manera tradicional

        var idSucursal = $('input[name="idSucursal"]').val();

        $.ajax({
            url: '/estadisticas/comprasSucursal',
            method: 'GET',
            data: { idSucursal: idSucursal },
            success: function(data) {
                // Verificar si los datos están vacíos
                if (!data || data.length === 0) {
                    alert('No se encontraron compras para la sucursal seleccionada.');
                    return;
                }

                var nombresUsuarios = data.map(function(item) { return item.NombreUsuario; });
                var totalCompras = data.map(function(item) { return item.TotalCompras; });

                // Destruye gráfico previo si existe
                if (window.comprasChart) {
                    window.comprasChart.destroy();
                }

                // Crear un nuevo gráfico de barras
                var ctx = document.getElementById('graficoComprasUsuario').getContext('2d');
                window.comprasChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: nombresUsuarios,
                        datasets: [{
                            label: 'Compras por Usuario',
                            data: totalCompras,
                            backgroundColor: 'rgba(54, 162, 235, 0.2)',
                            borderColor: 'rgba(54, 162, 235, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            },
            error: function(err) {
                console.error('Error al cargar los datos:', err);
                alert('Ocurrió un error al cargar los datos. Inténtalo de nuevo.');
            }
        });
    });
</script>
<script>
    // Gráfico: Reclamos de Promociones por Usuario
    $.ajax({
            url: '/estadisticas/reclamoPromoSucursal',
            method: 'GET',
            data: { idSucursal: idSucursal },
            success: function(data) {
                if (!data || data.length === 0) {
                    alert('No se encontraron reclamos para la sucursal seleccionada.');
                    return;
                }

                var nombresUsuarios = data.map(function(item) { return item.NombreUsuario; });
                var totalReclamos = data.map(function(item) { return item.TotalReclamos; });

                if (window.reclamoChart) {
                    window.reclamoChart.destroy();
                }

                var ctx = document.getElementById('reclamoPromoChart').getContext('2d');
                window.reclamoChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: nombresUsuarios,
                        datasets: [{
                            label: 'Reclamos de Promociones por Usuario',
                            data: totalReclamos,
                            backgroundColor: 'rgba(255, 159, 64, 0.2)',
                            borderColor: 'rgba(255, 159, 64, 1)',
                            borderWidth: 1
                        }]
                    },
                    options: {
                        scales: {
                            y: {
                                beginAtZero: true
                            }
                        }
                    }
                });
            },
            error: function(err) {
                console.error('Error al cargar los datos:', err);
                alert('Ocurrió un error al cargar los datos. Inténtalo de nuevo.');
            }
        });
</script>

<%- include('includes/foot.ejs') %>
