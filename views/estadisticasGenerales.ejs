<%- include('includes/head.ejs') %>

<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<h1 class="title has-text-centered" style="margin-bottom: 60px;">ESTADÍSTICAS GENERALES</h1>

<div class="charts-container" style="display: grid; grid-template-columns: repeat(2, 1fr); gap: 20px;">
    <!-- Compras por usuario -->
    <div style="text-align: center; margin-left: -200px;">
        <h2 class="subtitle" style="text-align: center;">Compras por Usuario</h2>
        <canvas id="comprasChart" style="width: 800px; height: 700px;"></canvas>
    </div>

    <!-- Promociones Activas -->
    <div style="text-align: center; margin-left: 100px;">
        <h3 class="subtitle" style="text-align: center;">Promociones Activas</h3>
        <canvas id="promocionesChart" style="width: 800px; height: 700px;"></canvas>
    </div>

    <!-- Reclamos por promoción -->
    <div style="text-align: center; margin-left: -200px;">
        <h4 class="subtitle" style="text-align: center;">Reclamos por Promoción</h4>
        <canvas id="reclamosChart" style="width: 800px; height: 700px;"></canvas>
    </div>

    <!-- Recompensas reclamadas -->
    <div style="text-align: center; margin-left: 100px;">
        <h5 class="subtitle" style="text-align: center;">Recompensas Reclamadas</h5>
        <canvas id="recompensasChart" style="width: 800px; height: 700px;"></canvas>
    </div>
</div>

<script>
// Función para cargar los datos de compras por usuario
function loadComprasPorUsuario() {
    $.ajax({
        url: '/estadisticas/comprasPorUsuario',  
        method: 'GET',
        success: function(comprasPorUsuario) {
            console.log('Datos recibidos:', comprasPorUsuario);

            // Extraer los IDs de usuario y el total de compras
            const labels = comprasPorUsuario.map(item => item.IDUsuario);
            const dataCompras = comprasPorUsuario.map(item => item.totalCompras);

            console.log('Labels:', labels);
            console.log('Data Compras:', dataCompras);

            // Crear la gráfica
            const ctx = document.getElementById('comprasChart').getContext('2d');
            const comprasChart = new Chart(ctx, {
                type: 'bar', 
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Compras por Usuario',
                        data: dataCompras,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 2
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        },
        error: function(error) {
            console.error('Error al cargar las compras por usuario:', error);
        }
    });
}


// Función para cargar los datos de promociones activas con sus compras
function loadPromocionesActivas() {
    $.ajax({
        url: '/estadisticas/promocionesActivas',  
        method: 'GET',
        success: function(promocionesActivas) {
            const labels = promocionesActivas.map(item => item.NombrePromocion);
            const dataCompras = promocionesActivas.map(item => item.Compra);

            const ctx = document.getElementById('promocionesChart').getContext('2d');
            const promocionesChart = new Chart(ctx, {
                type: 'pie',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Compras por Promoción Activa',
                        data: dataCompras,
                        backgroundColor:[
                            'rgba(255, 99, 132, 0.6)',
                            'rgba(54, 162, 235, 0.6)',
                            'rgba(255, 206, 86, 0.6)',
                            'rgba(75, 192, 192, 0.6)',
                            'rgba(153, 102, 255, 0.6)',
                            'rgba(255, 159, 64, 0.6)',
                            'rgba(144, 238, 144, 0.6)',

                        ],
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 0
                    }]
                },
                options: {
                    plugins: {
                        legend: {
                            position: 'right', // Mueve las etiquetas a la derecha
                            labels: {
                                boxWidth: 20,  // Ajusta el tamaño de las cajas de color
                                padding: 15    // Ajusta el espacio entre las etiquetas
                            }
                        }
                    }
                }
            });
        },
        error: function(error) {
            console.error('Error al cargar las promociones con compras:', error);
        }
    });
}


// Función para cargar los datos de reclamos por promoción
function loadReclamosPorPromocion() {
    $.ajax({
        url: '/estadisticas/reclamosPorPromocion',
        method: 'GET',
        success: function(reclamosPorPromocion) {
            console.log('Datos recibidos:', reclamosPorPromocion);

            // Extraer los IDs de promoción y el total de reclamos
            const labels = reclamosPorPromocion.map(item => item.IDPromocion);
            const dataReclamos = reclamosPorPromocion.map(item => item.totalReclamos);

            console.log('Labels:', labels);
            console.log('Data Reclamos:', dataReclamos);

            const ctx = document.getElementById('reclamosChart').getContext('2d');
            const reclamosChart = new Chart(ctx, {
                type: 'bar', 
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Reclamos por Promoción',
                        data: dataReclamos,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 2
                        
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        },
        error: function(error) {
            console.error('Error al cargar los reclamos por promoción:', error);
        }
    });
}

// Función para cargar los datos de recompensas reclamadas
function loadRecompensaReclamadaPorPromocion() {
    $.ajax({
        url: '/estadisticas/recompensaReclamadaPorPromocion',  
        method: 'GET',
        success: function(recompensas) {
            console.log('Datos recibidos:', recompensas);

            const labels = recompensas.map(item => item.Promocion);
            const dataRecompensas = recompensas.map(item => item.TotalReclamaciones);

            const ctx = document.getElementById('recompensasChart').getContext('2d');
            const recompensasChart = new Chart(ctx, {
                type: 'bar', 
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Recompensas Reclamadas',
                        data: dataRecompensas,
                        backgroundColor: 'rgba(75, 192, 192, 0.2)',
                        borderColor: 'rgba(75, 192, 192, 1)',
                        borderWidth: 2
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        },
        error: function(error) {
            console.error('Error al cargar las recompensas reclamadas:', error);
        }
    });
}




// Llamar a la función al cargar la página
$(document).ready(function() {
    loadComprasPorUsuario();
    loadPromocionesActivas();
    loadReclamosPorPromocion();
    loadRecompensaReclamadaPorPromocion();  
});
</script>

<%- include('includes/foot.ejs') %>
